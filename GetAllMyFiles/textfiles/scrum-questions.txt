
Building software is hard. Building hardware is hard. Building rocketships that put men on the moon is hard. But these things do get built, and the expectation is they are built well. But if you were tasked to put together a team and build something complex, how would you do it? How would you organize your team and progress through the development process, address complex problems, adapt to changes and deliver the highest quality product possible? This is the precise problem the Scrum framework promises to address.

The most succinct and concise definition of Scrum comes from the Scrum Guide itself which states:

Scrum (n): A framework within which people can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.

 






Which two names are credited with the creation of Scrum?

Ken Schwaber
Jeff Sutherland
James Gosling
Jon Kern


A complete definition of Scrum requires which four elements?

roles
events
artifiacts
rules


Scrum is designed to:

address complex problems
address adaptive problems
address complex products
address adaptive products

Scrum attempts to deliver high value products in which two manners:

productively
creatively
iteratively
incrementally

Scrum is:

simple to understand
simple to master
difficult to understand
difficult to master


Scrum is a:

process
framework
technique
methodology


Scrum is a:

framework within which you can employ various processes and techniques
process within which you can employ various frameworks and techniques
technique within which you can employ various processes and frameworks
methdology within which you can employ various processes and frameworks


Efficacy is synonymous with:

efficiency
productivy
effort
affection
effectiveness


Scrum helps to shed light on how effective you apply:

product management techniques
product planning techniques
work techniques
continuous delivery techniques

Scrum concerns itself with the continuous improvement of:

the product
the team
the work environment
the user acceptance


Each Scrum component serves a specific purporse and is essential to success when using Scrum. Those four components include:

roles
events
artifacts
rules
backlogs


The rules of Scrum:

bind together roles, events and artifacts
define the role of the scrum master
govern relationships between Scrum components
separate scrum teams from project delivery


The Scrum Guide:

provides concrete approaches for using Scrum
differentiates between Lean, Kanban and XP approaches
demonstrates how to implement Agile practices
does not show specific tactics for using Scrum


Scrum came into common usage:

in the 1950s
in the 1980s
in the 1990s
in the early 2000s


Scrum's originally intended use was for:

managing people
managing products
developing people
developing products


Scrum can be used to:

research viable markets for products
develop product enhancements
frequently release products
renew products


Releasing a product multiple times a day is known as:

continuous integration
continuous delivery
continuous Scrum
continuous DevOps

Secure, on-demand, online software is colloqually referred to in the Scrum Guide as:

Cloud based
service based
DevOps based
Agile based


Logic programmed into 'headless' systems such as a drone or a soda machine is often referred to as:

embedded software
blockchain software
service software
encrypted software

Scrum has been used to develop:

software
hardware
embedded software
networks of interacting function
autonomous vehicles
schools
governments
marketing
managing business operations
everything we use in our daily lives


As technology, market and environmental complexities increase, Scrums utility:

has been disproven in certain problem domains
has diminished
has been shown to be best suited to software development
is proven daily in its ability to deal with complexity


An iterative process is one that:

repeats the same set of steps multiple times
repeats itself and expands by adding new steps
adds to itself so it grows slowly over times
a process that short circuits the first time it fails

An incremental process is on that:

repeats the same set of steps multiple times
repeats itself and expands by adding new steps
adds to itself so it grows slowly over times
a process that short circuits the first time it fail


Sharing skills and expert knowledge about a product is known as:

knowledge transfer
corporate training
online learning
Agile development














































